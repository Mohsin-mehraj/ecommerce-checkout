{
    "sourceFile": "backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748691732105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748691820864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,71 @@\n+require(\"dotenv\").config();\r\n const express = require(\"express\");\r\n const cors = require(\"cors\");\r\n+const helmet = require(\"helmet\");\r\n+const morgan = require(\"morgan\");\r\n \r\n+const productRoutes = require(\"./routes/productRoutes\");\r\n+const orderRoutes = require(\"./routes/orderRoutes\");\r\n+\r\n+// Import middleware\r\n+const { errorHandler, notFound } = require(\"./middleware/errorHandler\");\r\n+\r\n const app = express();\r\n+const PORT = process.env.PORT || 5000;\r\n \r\n-app.use(cors());\r\n-app.use(express.json());\r\n+app.use(helmet());\r\n \r\n-// Test route\r\n-app.get(\"/\", (req, res) => {\r\n-  res.json({ message: \"Backend is working!\" });\r\n-});\r\n+app.use(\r\n+  cors({\r\n+    origin: [\r\n+      \"http://localhost:3000\",\r\n+      \"http://localhost:5173\",\r\n+      \"https://ecommerce-checkout-w68p-p1n0s4tc0-mohsin-mehrajs-projects.vercel.app\",\r\n+      process.env.FRONTEND_URL,\r\n+    ].filter(Boolean),\r\n+    credentials: true,\r\n+  })\r\n+);\r\n \r\n-app.get(\"/api/test\", (req, res) => {\r\n-  res.json({ message: \"API is working!\" });\r\n-});\r\n+// Logging middleware\r\n+app.use(morgan(\"combined\"));\r\n \r\n-// Test products route\r\n-app.get(\"/api/products\", (req, res) => {\r\n+// Body parsing middleware\r\n+app.use(express.json({ limit: \"10mb\" }));\r\n+app.use(express.urlencoded({ extended: true }));\r\n+\r\n+// API routes\r\n+app.use(\"/api/products\", productRoutes);\r\n+app.use(\"/api/orders\", orderRoutes);\r\n+\r\n+// Welcome message for root endpoint\r\n+app.get(\"/\", (req, res) => {\r\n   res.json({\r\n     success: true,\r\n-    data: [{ id: 1, title: \"Test Product\", price: 99.99 }],\r\n+    message: \"Welcome to E-Commerce API\",\r\n+    version: \"1.0.0\",\r\n+    endpoints: {\r\n+      products: \"/api/products\",\r\n+      orders: \"/api/orders\",\r\n+    },\r\n+    features: {\r\n+      transactionSimulation: \"Card ending in 1=Approved, 2=Declined, 3=Error\",\r\n+      inventoryManagement: \"Real-time stock tracking and updates\",\r\n+      orderProcessing: \"Complete order lifecycle management\",\r\n+      emailNotifications: \"Mailtrap integration for order emails\",\r\n+    },\r\n   });\r\n });\r\n \r\n-// Test orders route\r\n-app.post(\"/api/orders\", (req, res) => {\r\n-  res.json({\r\n-    success: true,\r\n-    message: \"Order test endpoint working\",\r\n+// Error handling middleware (must be last)\r\n+app.use(notFound);\r\n+app.use(errorHandler);\r\n+\r\n+// Only start server if not in Vercel environment\r\n+if (process.env.NODE_ENV !== \"production\") {\r\n+  app.listen(PORT, () => {\r\n+    console.log(`ðŸš€ Server is running on port ${PORT}`);\r\n   });\r\n-});\r\n+}\r\n \r\n-module.exports = app;\r\n+module.exports = app;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1748691732104,
            "name": "Commit-0",
            "content": "const express = require(\"express\");\r\nconst cors = require(\"cors\");\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// Test route\r\napp.get(\"/\", (req, res) => {\r\n  res.json({ message: \"Backend is working!\" });\r\n});\r\n\r\napp.get(\"/api/test\", (req, res) => {\r\n  res.json({ message: \"API is working!\" });\r\n});\r\n\r\n// Test products route\r\napp.get(\"/api/products\", (req, res) => {\r\n  res.json({ \r\n    success: true,\r\n    data: [\r\n      { id: 1, title: \"Test Product\", price: 99.99 }\r\n    ]\r\n  });\r\n});\r\n\r\n// Test orders route  \r\napp.post(\"/api/orders\", (req, res) => {\r\n  res.json({\r\n    success: true,\r\n    message: \"Order test endpoint working\"\r\n  });\r\n});\r\n\r\nmodule.exports = app;"
        }
    ]
}