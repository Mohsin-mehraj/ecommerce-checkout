{
    "sourceFile": "backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748690280215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748690280215,
            "name": "Commit-0",
            "content": "require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst helmet = require(\"helmet\");\r\nconst morgan = require(\"morgan\");\r\n\r\nconst productRoutes = require(\"./routes/productRoutes\");\r\nconst orderRoutes = require(\"./routes/orderRoutes\");\r\n\r\n// Import middleware\r\nconst { errorHandler, notFound } = require(\"./middleware/errorHandler\");\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.use(helmet());\r\n\r\napp.use(\r\n  cors({\r\n    origin: [\r\n      \"http://localhost:3000\",\r\n      \"http://localhost:5173\",\r\n      \"https://ecommerce-checkout-w68p-p1n0s4tc0-mohsin-mehrajs-projects.vercel.app\",\r\n      process.env.FRONTEND_URL,\r\n    ].filter(Boolean),\r\n    credentials: true,\r\n  })\r\n);\r\n\r\n// Logging middleware\r\napp.use(morgan(\"combined\"));\r\n\r\n// Body parsing middleware\r\napp.use(express.json({ limit: \"10mb\" }));\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// API routes\r\napp.use(\"/api/products\", productRoutes);\r\napp.use(\"/api/orders\", orderRoutes);\r\n\r\n// Welcome message for root endpoint\r\napp.get(\"/\", (req, res) => {\r\n  res.json({\r\n    success: true,\r\n    message: \"Welcome to E-Commerce API\",\r\n    version: \"1.0.0\",\r\n    endpoints: {\r\n      products: \"/api/products\",\r\n      orders: \"/api/orders\",\r\n    },\r\n    features: {\r\n      transactionSimulation: \"Card ending in 1=Approved, 2=Declined, 3=Error\",\r\n      inventoryManagement: \"Real-time stock tracking and updates\",\r\n      orderProcessing: \"Complete order lifecycle management\",\r\n      emailNotifications: \"Mailtrap integration for order emails\",\r\n    },\r\n  });\r\n});\r\n\r\n// Error handling middleware (must be last)\r\napp.use(notFound);\r\napp.use(errorHandler);\r\n\r\n// Only start server if not in Vercel environment\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  app.listen(PORT, () => {\r\n    console.log(`ðŸš€ Server is running on port ${PORT}`);\r\n  });\r\n}\r\n\r\nmodule.exports = app;"
        }
    ]
}